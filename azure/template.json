{
    "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "resourceEnvironmentName": {
            "type": "string"
        },
        "environmentName": {
            "type": "string"
        },
        "serviceName": {
            "type": "string"
        },
        "deployStubFunctions": {
            "type": "bool",
            "defaultValue": false
        },
        "aspSize": {
            "type": "string",
            "defaultValue": "1"
        },
        "aspInstances": {
            "type": "int",
            "defaultValue": 2
        },
        "appServicePlanTier": {
            "type": "string",
            "defaultValue": "Standard"
        },
        "configurationStorageConnectionString": {
            "type": "securestring"
        },
        "policyRules": {
            "type": "array",
            "defaultValue": [],
            "metadata": {
                "description": "A list of management policy rules"
            }
        },
        "storageKind": {
            "type": "string"
        },
        "loggingRedisConnectionString": {
            "type": "securestring"
        },
        "resourceGroupLocation": {
            "type": "string"
        },
        "tags": {
            "type": "object"
        },
        "sharedEnvVirtualNetworkName": {
            "type": "string"
        },
        "subnetServiceEndpointList": {
            "type": "array"
        },
        "subnetDelegations": {
            "type": "array"
        },
        "workerAccessRestrictions": {
            "type": "array"
        },
        "sharedEnvResourceGroup": {
            "type": "string"
        },
        "subnetObject": {
            "type": "object"
        },
        "sharedSQLServerName": {
            "type": "string"
        },
        "utcValue": {
            "type": "string",
            "defaultValue": "[utcNow()]"
        },
        "minimumTlsVersion": {
            "type": "string",
            "defaultValue": "TLS1_2"
        },
        "serviceBusConnectionString": {
            "type": "string"
        },
        "logAnalyticsSubscriptionId": {
            "type": "string",
            "defaultValue": "[subscription().subscriptionId]"
        },
        "logAnalyticsWorkspaceName": {
            "type": "string"
        },
        "sharedManagementResourceGroup": {
            "type": "string"
        }
    },
    "variables": {
        "deploymentUrlBase": "https://raw.githubusercontent.com/SkillsFundingAgency/das-platform-building-blocks/master/templates/",
        "resourcePrefix": "[toLower(concat('das-', parameters('resourceEnvironmentName'),'-', parameters('serviceName')))]",
        "appServicePlanName": "[concat(variables('resourcePrefix'),'-asp')]",
        "stubFunctionAppName": "[concat(variables('resourcePrefix'),'-stub-fa')]",
        "functionAppName": "[concat(variables('resourcePrefix'),'-data-fa')]",
        "importFunctionAppName": "[concat(variables('resourcePrefix'),'-import-fa')]",
        "storageAccountName": "[concat('das',toLower(parameters('resourceEnvironmentName')),parameters('serviceName'),'str')]",
        "storageContainerNames": [ "import-person", "import-campaign-members" ],
        "resourceGroupName": "[concat(variables('resourcePrefix'), '-rg')]",
        "configName": "SFA.DAS.DigitalEngagement",
    	"employerUsersImportSchedule": "0 */5 * * * *",
    	"dataMartImportSchedule": "0 0 4 * * *"
    },
    "resources": [
        {
            "apiVersion": "2021-04-01",
            "name": "[variables('resourceGroupName')]",
            "type": "Microsoft.Resources/resourceGroups",
            "location": "[parameters('resourceGroupLocation')]",
            "tags": "[parameters('tags')]",
            "properties": {
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "name": "[concat(parameters('subnetObject').name, '-', parameters('utcValue'))]",
            "resourceGroup": "[parameters('sharedEnvResourceGroup')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'subnet.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "virtualNetworkName": {
                        "value": "[parameters('sharedEnvVirtualNetworkName')]"
                    },
                    "subnetName": {
                        "value": "[parameters('subnetObject').name]"
                    },
                    "subnetAddressPrefix": {
                        "value": "[parameters('subnetObject').addressSpace]"
                    },
                    "serviceEndpointList": {
                        "value": "[parameters('subnetServiceEndpointList')]"
                    },
                    "delegations": {
                        "value": "[parameters('subnetDelegations')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2021-04-01",
            "name": "[concat(parameters('subnetObject').name, '-sql-firewall-rule-', parameters('utcValue'))]",
            "resourceGroup": "[parameters('sharedEnvResourceGroup')]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'), 'sql-server-firewall-rules.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "serverName": {
                        "value": "[parameters('sharedSQLServerName')]"
                    },
                    "subnetResourceIdList": {
                        "value": "[createArray(reference(concat(parameters('subnetObject').name, '-', parameters('utcValue'))).outputs.SubnetResourceId.value)]"
                    }
                }
            }
        },
        {
            "apiVersion": "2021-04-01",
            "name": "[concat(variables('appServicePlanName'), '-', parameters('utcValue'))]",
            "resourceGroup": "[variables('resourceGroupName')]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'app-service-plan.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "appServicePlanName": {
                        "value": "[variables('appServicePlanName')]"
                    },
                    "aspSize": {
                        "value": "[parameters('aspSize')]"
                    },
                    "aspInstances": {
                        "value": "[parameters('aspInstances')]"
                    },
                    "nonASETier": {
                        "value": "[parameters('appServicePlanTier')]"
                    }
                }
            },
            "dependsOn": [
                "[variables('resourceGroupName')]"
            ]
        },
        {
            "apiVersion": "2021-04-01",
            "name": "[concat(variables('functionAppName'), '-application-insights-', parameters('utcValue'))]",
            "resourceGroup": "[variables('resourceGroupName')]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'application-insights.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "appInsightsName": {
                        "value": "[variables('functionAppName')]"
                    },
                    "attachedService": {
                        "value": "[variables('functionAppName')]"
                    },
                    "logAnalyticsWorkspaceId": {
                        "value": "[resourceId(parameters('logAnalyticsSubscriptionId'),parameters('sharedManagementResourceGroup'),'Microsoft.OperationalInsights/workspaces',parameters('logAnalyticsWorkspaceName'))]"
                    }
                }
            },
            "dependsOn": [
                "[variables('resourceGroupName')]"
            ]
        },
        {
            "apiVersion": "2021-04-01",
            "name": "[concat(variables('stubFunctionAppName'), '-application-insights-', parameters('utcValue'))]",
            "resourceGroup": "[variables('resourceGroupName')]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'application-insights.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "appInsightsName": {
                        "value": "[variables('stubFunctionAppName')]"
                    },
                    "attachedService": {
                        "value": "[variables('stubFunctionAppName')]"
                    },
                    "logAnalyticsWorkspaceId": {
                        "value": "[resourceId(parameters('logAnalyticsSubscriptionId'),parameters('sharedManagementResourceGroup'),'Microsoft.OperationalInsights/workspaces',parameters('logAnalyticsWorkspaceName'))]"
                    }
                }
            },
            "dependsOn": [
                "[variables('resourceGroupName')]"
            ]
        },
        {
            "apiVersion": "2021-04-01",
            "name": "[concat(variables('importFunctionAppName'), '-application-insights-', parameters('utcValue'))]",
            "resourceGroup": "[variables('resourceGroupName')]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'application-insights.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "appInsightsName": {
                        "value": "[variables('importFunctionAppName')]"
                    },
                    "attachedService": {
                        "value": "[variables('importFunctionAppName')]"
                    },
                    "logAnalyticsWorkspaceId": {
                        "value": "[resourceId(parameters('logAnalyticsSubscriptionId'),parameters('sharedManagementResourceGroup'),'Microsoft.OperationalInsights/workspaces',parameters('logAnalyticsWorkspaceName'))]"
                    }    
                }
            },
            "dependsOn": [
                "[variables('resourceGroupName')]"
            ]
        },
        {
            "apiVersion": "2021-04-01",
            "name": "[concat(variables('storageAccountName'), '-', parameters('utcValue'))]",
            "resourceGroup": "[variables('resourceGroupName')]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'storage-account-arm.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "storageAccountName": {
                        "value": "[variables('storageAccountName')]"
                    },
                    "storageKind": {
                        "value": "[parameters('storageKind')]"
                    },
                    "allowSharedKeyAccess": {
                        "value": true
                    },
                    "minimumTlsVersion": {
                        "value": "[parameters('minimumTlsVersion')]"
                    }
                }
            },
            "dependsOn": [
                "[variables('resourceGroupName')]"
            ]
        },
        {
            "apiVersion": "2021-04-01",
            "name": "[concat(variables('storageAccountName'), '-', variables('storageContainerNames')[copyIndex()], '-', parameters('utcValue'))]",
            "resourceGroup": "[variables('resourceGroupName')]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'storage-container.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "storageAccountName": {
                        "value": "[variables('storageAccountName')]"
                    },
                    "containerName": {
                        "value": "[variables('storageContainerNames')[copyIndex()]]"
                    }
                }
            },
            "copy": {
                "count": "[length(variables('storageContainerNames'))]",
                "name": "storageContainerCopy"
            },
            "dependsOn": [
                "[concat(variables('storageAccountName'), '-', parameters('utcValue'))]"
            ]
        },
        {
            "apiVersion": "2021-04-01",
            "name": "[concat(variables('storageAccountName'), '-storage-management-policy-', parameters('utcValue'))]",
            "resourceGroup": "[variables('resourceGroupName')]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'storage-management-policy.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "storageAccountName": {
                        "value": "[variables('storageAccountName')]"
                    },
                    "policyRules": {
                        "value": "[parameters('policyRules')]"

                    }
                }
            },
            "dependsOn": [
                "[concat(variables('storageAccountName'), '-', parameters('utcValue'))]"
            ]
        },
        {
            "apiVersion": "2021-04-01",
            "name": "[concat(variables('stubFunctionAppName'), '-', parameters('utcValue'))]",
            "resourceGroup": "[variables('resourceGroupName')]",
            "type": "Microsoft.Resources/deployments",
            "condition": "[parameters('deployStubFunctions')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'function-app-v2.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "functionAppName": {
                        "value": "[variables('stubFunctionAppName')]"
                    },
                    "appServicePlanName": {
                        "value": "[variables('appServicePlanName')]"
                    },
                    "appServicePlanResourceGroup": {
                        "value": "[variables('resourceGroupName')]"
                    },
                    "netFrameworkVersion": {
                        "value": "v8.0"
                    },
                    "subnetResourceId": {
                        "value": "[reference(concat(parameters('subnetObject').name, '-', parameters('utcValue'))).outputs.subnetResourceId.value]"
                    },
                    "ipSecurityRestrictions": {
                        "value": "[parameters('workerAccessRestrictions')]"
                    },
                    "functionAppAppSettings": {
                        "value": {
                            "array": [
                                {
                                    "name": "FUNCTIONS_EXTENSION_VERSION",
                                    "value": "~4"
                                },
                                {
                                    "name": "FUNCTIONS_WORKER_RUNTIME",
                                    "value": "dotnet-isolated"
                                },
                                {
                                    "name": "WEBSITE_RUN_FROM_PACKAGE",
                                    "value": "1"
                                },
                                {
                                    "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
                                    "value": "[reference(concat(variables('stubFunctionAppName'), '-application-insights-', parameters('utcValue'))).outputs.ConnectionString.value]"
                                }
                            ]
                        }
                    }
                }
            },
            "dependsOn": [
                "[variables('resourceGroupName')]",
                "[concat(variables('appServicePlanName'), '-', parameters('utcValue'))]"
            ]
        },
        {
            "apiVersion": "2021-04-01",
            "name": "[concat(variables('functionAppName'), '-', parameters('utcValue'))]",
            "resourceGroup": "[variables('resourceGroupName')]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'function-app-v2.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "functionAppName": {
                        "value": "[variables('functionAppName')]"
                    },
                    "appServicePlanName": {
                        "value": "[variables('appServicePlanName')]"
                    },
                    "appServicePlanResourceGroup": {
                        "value": "[variables('resourceGroupName')]"
                    },
                    "netFrameworkVersion": {
                        "value": "v8.0"
                    },
                    "subnetResourceId": {
                        "value": "[reference(concat(parameters('subnetObject').name, '-', parameters('utcValue'))).outputs.subnetResourceId.value]"
                    },
                    "ipSecurityRestrictions": {
                        "value": "[parameters('workerAccessRestrictions')]"
                    },
                    "functionAppAppSettings": {
                        "value": {
                            "array": [
                                {
                                    "name": "AzureWebJobsStorage",
                                    "value": "[reference(concat(variables('storageAccountName'), '-', parameters('utcValue'))).outputs.storageConnectionString.value]"
                                },
                                {
                                    "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
                                    "value": "[reference(concat(variables('functionAppName'), '-application-insights-', parameters('utcValue'))).outputs.ConnectionString.value]"
                                },
                                {
                                    "name": "FUNCTIONS_EXTENSION_VERSION",
                                    "value": "~4"
                                },
                                {
                                    "name": "ConfigName",
                                    "value": "[variables('configName')]"
                                },
                                {
                                    "name": "EnvironmentName",
                                    "value": "[parameters('environmentName')]"
                                },
                                {
                                    "name": "AzureWebJobsServiceBus",
                                    "value": "[parameters('serviceBusConnectionString')]"
                                },
                                {
                                    "name": "ConfigurationStorageConnectionString",
                                    "value": "[parameters('configurationStorageConnectionString')]"
                                },
                                {
                                    "name": "AppName",
                                    "value": "das-digital-engagement-employer-import"
                                },
                                {
                                    "name": "FUNCTIONS_WORKER_RUNTIME",
                                    "value": "dotnet-isolated"
                                },
                                {
                                    "name": "WEBSITE_RUN_FROM_PACKAGE",
                                    "value": "1"
                                },
                                {
                                    "name": "EmployerUsersImportSchedule",
                                    "value": "[variables('employerUsersImportSchedule')]"
                                },
                                {
                                    "name": "DataMartImportSchedule",
                                    "value": "[variables('dataMartImportSchedule')]"
                                }
                            ]
                        }
                    }
                }
            },
            "dependsOn": [
                "[variables('resourceGroupName')]",
                "[concat(variables('appServicePlanName'), '-', parameters('utcValue'))]"
            ]
        },
        {
            "apiVersion": "2021-04-01",
            "name": "[concat(variables('importFunctionAppName'), '-', parameters('utcValue'))]",
            "resourceGroup": "[variables('resourceGroupName')]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'function-app-v2.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "functionAppName": {
                        "value": "[variables('importFunctionAppName')]"
                    },
                    "appServicePlanName": {
                        "value": "[variables('appServicePlanName')]"
                    },
                    "appServicePlanResourceGroup": {
                        "value": "[variables('resourceGroupName')]"
                    },
                    "netFrameworkVersion": {
                        "value": "v8.0"
                    },
                    "subnetResourceId": {
                        "value": "[reference(concat(parameters('subnetObject').name, '-', parameters('utcValue'))).outputs.subnetResourceId.value]"
                    },
                    "ipSecurityRestrictions": {
                        "value": "[parameters('workerAccessRestrictions')]"
                    },
                    "functionAppAppSettings": {
                        "value": {
                            "array": [
                                {
                                    "name": "AzureWebJobsStorage",
                                    "value": "[reference(concat(variables('storageAccountName'), '-', parameters('utcValue'))).outputs.storageConnectionString.value]"
                                },
                                {
                                    "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
                                    "value": "[reference(concat(variables('importFunctionAppName'), '-application-insights-', parameters('utcValue'))).outputs.ConnectionString.value]"
                                },
                                {
                                    "name": "FUNCTIONS_EXTENSION_VERSION",
                                    "value": "~4"
                                },
                                {
                                    "name": "ConfigName",
                                    "value": "[variables('configName')]"
                                },
                                {
                                    "name": "EnvironmentName",
                                    "value": "[parameters('environmentName')]"
                                },
                                {
                                    "name": "ConfigurationStorageConnectionString",
                                    "value": "[parameters('configurationStorageConnectionString')]"
                                },
                                {
                                    "name": "AppName",
                                    "value": "das-digital-engagement-import-csv"
                                },
                                {
                                    "name": "FUNCTIONS_WORKER_RUNTIME",
                                    "value": "dotnet-isolated"
                                },
                                {
                                    "name": "LoggingRedisConnectionString",
                                    "value": "[parameters('loggingRedisConnectionString')]"
                                },
                                {
                                    "name": "WEBSITE_RUN_FROM_PACKAGE",
                                    "value": "1"
                                },
                                {
                                    "name": "EmployerUsersImportSchedule",
                                    "value": "[variables('employerUsersImportSchedule')]"
                                },
                                {
                                    "name": "DataMartImportSchedule",
                                    "value": "[variables('dataMartImportSchedule')]"
                                }
                            ]
                        }
                    }
                }
            },
            "dependsOn": [
                "[variables('resourceGroupName')]",
                "[concat(variables('appServicePlanName'), '-', parameters('utcValue'))]"
            ]
        },
        {
            "apiVersion": "2022-09-01",
            "name": "[concat(variables('functionAppName'), '-cors-policies-', parameters('utcValue'))]",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[variables('resourceGroupName')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'cors-policy.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "functionAppName": {
                        "value": "[variables('functionAppName')]"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('functionAppName'), '-', parameters('utcValue'))]"
            ]
        },
        {
            "apiVersion": "2022-09-01",
            "name": "[concat(variables('stubFunctionAppName'), '-cors-policies-', parameters('utcValue'))]",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[variables('resourceGroupName')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'cors-policy.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "functionAppName": {
                        "value": "[variables('stubFunctionAppName')]"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('stubFunctionAppName'), '-', parameters('utcValue'))]"
            ]
        },
        {
            "apiVersion": "2022-09-01",
            "name": "[concat(variables('importFunctionAppName'), '-cors-policies-', parameters('utcValue'))]",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[variables('resourceGroupName')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'cors-policy.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "functionAppName": {
                        "value": "[variables('importFunctionAppName')]"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('importFunctionAppName'), '-', parameters('utcValue'))]"
            ]
        }
    ],
    "outputs": {
        "StubFunctionAppName": {
            "type": "string",
            "value": "[variables('stubFunctionAppName')]"
        },
        "FunctionAppName": {
            "type": "string",
            "value": "[variables('functionAppName')]"
        },
        "ImportFunctionAppName": {
            "type": "string",
            "value": "[variables('importFunctionAppName')]"
        },
        "ResourceGroupName": {
            "type": "string",
            "value": "[variables('resourceGroupName')]"
        }
    }
}
