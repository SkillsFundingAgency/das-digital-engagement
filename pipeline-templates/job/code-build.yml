jobs:
- job: CodeBuild
  pool:
    name: DAS - Continuous Integration
    demands: Agent.OS -equals Windows_NT
  workspace:
    clean: all
  variables:
  - name: buildConfiguration
    value: 'release'
  - name: buildPlatform
    value: 'anycpu'
  - group: BUILD Management Resources

  steps:
  - template: azure-pipelines-templates/build/step/gitversion.yml@das-platform-building-blocks

  - template: azure-pipelines-templates/build/step/app-build.yml@das-platform-building-blocks
    parameters:
      SonarCloudProjectKey: SkillsFundingAgency_das-digital-engagement
      ContinueOnVulnerablePackageScanError: true

  - task: DotNetCoreCLI@2
    displayName: 'Publish DataCollection Function'
    inputs:
      command: publish
      publishWebProjects: false
      projects: 'src/DAS.DigitalEngagement.DataCollectionSubscribe.Function/DAS.DigitalEngagement.Functions.DataCollection.csproj'
      arguments: '--configuration $(buildConfiguration) --output $(build.artifactstagingdirectory)/publish'

  - task: DotNetCoreCLI@2
    displayName: 'Publish Stub Function'
    inputs:
      command: publish
      publishWebProjects: false
      projects: 'src/DAS.DigitalEngagement.DataCollectionStub.Function/DAS.DigitalEngagement.Functions.DataCollectionStub.csproj'
      arguments: '--configuration $(buildConfiguration) --output $(build.artifactstagingdirectory)/publish'

  - task: DotNetCoreCLI@2
    displayName: 'Publish Csv Import'
    inputs:
      command: publish
      publishWebProjects: false
      projects: 'src/DAS.DigitalEngagement.Functions.ImportCsv/DAS.DigitalEngagement.Functions.Import.csproj'
      arguments: '--configuration $(buildConfiguration) --output $(build.artifactstagingdirectory)/publish'

  - task: CopyFiles@2
    displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
    inputs:
      Contents: |
        azure/**
      TargetFolder: '$(build.artifactstagingdirectory)/publish'
      OverWrite: true

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact'
    inputs:
      PathtoPublish: '$(build.artifactstagingdirectory)/publish'
